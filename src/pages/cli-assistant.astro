---
import Code from '../components/ui/Code.astro';
import CTA from '../sections/CTA.astro';
import Footer from '../components/layout/Footer.astro'
import Header from '../components/layout/Header.astro'
import Layout from '../layouts/Layout.astro'
import Sidebar from '../layouts/Sidebar.astro'
import { eq, desc } from "drizzle-orm";
import { db } from "../db";
import { loginLogs, sessions } from "../db/schema";

const userIsLoggedIn = !!Astro.locals.userId;
const sessionToken = Astro.cookies.get("app_auth_token")?.value;

if (!sessionToken) {
  return Astro.redirect("/");
}

const userInfo = await db.query.sessions.findFirst({
  where: eq(sessions.id, sessionToken),
  with: {
    user: {
      with: {
        oauthTokens: {
          columns: {
            strategy: true,
            accessToken: true,
          },
        },
        loginLogs: {
          orderBy: desc(loginLogs.loggedInAt),
        },
      },
    },
  },
});

const githubToken = userInfo?.user?.oauthTokens?.find(token => token.strategy === 'github')?.accessToken;

---

<Layout title="Gitset - Smart AI Docs & Versioning for GitHub Repositories.">
  <Sidebar />
  <div class="flex flex-col min-h-screen">
    <div class="hidden lg:block fixed w-64 h-full">
      <Sidebar />
    </div>
    
    <div class="flex-1 lg:ml-64 flex flex-col">
      <Header />
      <main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-50">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8 mt-16 lg:mt-0 top">
          <div class="flex justify-center mb-4"></div>
          <CTA
            align="center"
            title={`<span id="cta-title"><strong>CLI-Troubleshooting</strong> Assistant</span>`}
            description={`
              <span id="cta-description">
                Having issues with Gitset CLI? Simply paste your error message or describe the issue in detail below. Our AI-driven assistant will promptly guide you through troubleshooting installation and configuration issues, helping you return to coding without delays.
              </span>
            `}
          >
          </CTA>
        </div>
      </main>
      <Footer />
    </div>
  </div>
</Layout>

<script>
  function setupTabs() {
    const projectTab = document.getElementById('projectTab') as HTMLButtonElement;
    const globalTab = document.getElementById('globalTab') as HTMLButtonElement;
    const projectContent = document.getElementById('projectContent') as HTMLDivElement;
    const globalContent = document.getElementById('globalContent') as HTMLDivElement;

    if (!projectTab || !globalTab || !projectContent || !globalContent) return;

    function switchTab(
      activeTab: HTMLButtonElement, 
      activeContent: HTMLDivElement, 
      inactiveTab: HTMLButtonElement, 
      inactiveContent: HTMLDivElement
    ) {
      activeTab.classList.add('border-teal-600', 'text-neutral-700');
      activeTab.classList.remove('border-transparent', 'text-neutral-700');
      inactiveTab.classList.remove('border-teal-600', 'text-neutral-700');
      inactiveTab.classList.add('border-transparent', 'text-neutral-700');
      activeContent.classList.remove('hidden');
      inactiveContent.classList.add('hidden');
    }

    projectTab.addEventListener('click', () => {
      switchTab(projectTab, projectContent, globalTab, globalContent);
    });

    globalTab.addEventListener('click', () => {
      switchTab(globalTab, globalContent, projectTab, projectContent);
    });
  }

  setupTabs();

  function updateCTA() {
    const ctaTitle = document.getElementById('cta-title');
    const ctaDescription = document.getElementById('cta-description');
    
    if (ctaTitle && ctaDescription) {
      ctaTitle.innerHTML = "Generated <strong>Commit Message</strong>";
      ctaDescription.textContent = "The generated Commit Message is a general reference and may not be fully accurate. If it doesn't meet your expectations, feel free to try again.";
    }
  }

  window.addEventListener('readmeGenerated', updateCTA);
</script>

<style>
  .main-container {
    min-height: 100vh;
    display: flex;
    margin-top: 6rem;
    flex-direction: column;
    justify-content: space-between;
  }

  @media (max-width: 1023px) {
    .container {
      max-width: 100% !important;
      padding-left: 1rem !important;
      padding-right: 1rem !important;
    }
  }

  .top {
    margin-top: 6rem;
  }

  .github-browser-container {
    min-height: 50vh;
  }

  .custom-button {
    background-color: #3a9fa8;
    border-color: #fff;
  }

  .cta-button {
    background-color: #59b4aa;
  }

  .from-primary\/50 {
    --tw-gradient-from: rgb(59 159 168) var(--tw-gradient-from-position);
}
  .to-secondary\/50 {
      --tw-gradient-to: rgb(252 192 176) var(--tw-gradient-to-position);
  }
</style>